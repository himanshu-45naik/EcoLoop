<%- layout %>

<div class="row mt-3">
    <div class="col-8 offset-2">
        <h1>Login</h1>
        <form id="loginForm" class="needs-validation" nonvalidate>
            <div class="col-md-4">
                <label for="username" class="form-label">Username</label>
                <input name="username" id="username" placeholder="Enter the Username" type="text" required class="form-control">
                <div class="invalid-feedback">Enter your Username.</div>
            </div>
            
            <div class="col-md-4">
                <label for="password" class="form-label">Password</label>
                <input name="password" id="password" placeholder="Enter the Password" type="password" required class="form-control">
                <div class="invalid-feedback">Enter your password.</div>
            </div>
            <button class="btn btn-dark" type="submit">Login</button>
            <a href="/auth/signup" class="btn btn-secondary">Sign Up</a>
        </form>
    </div>
</div>
<script>
    document.getElementById('loginForm').addEventListener('submit', function (event) {
        event.preventDefault(); // Prevent default form submission
        const username = document.getElementById('username').value;
        const password = document.getElementById('password').value;

        console.log(`Submitting login data: username=${username}, password=${password}`);

        fetch('/api/login', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                username: username,
                password: password
            })
        })
        .then(response => {
            if (!response.ok) {
                return response.json().then(data => {
                    throw new Error(data.error || 'An error occurred during login.');
                });
            }
            return response.json();
        })
        .then(data => {
            if (data.message === "Login successful") {
                window.location.href = "/dashboard";
            } else {
                alert(data.error);
            }
        })
        .catch(error => {
            console.error('Error:', error);
        });
    });

    (() => {
        'use strict'

        // Fetch all the forms we want to apply custom Bootstrap validation styles to
        const forms = document.querySelectorAll('.needs-validation')

        // Loop over them and prevent submission
        Array.from(forms).forEach(form => {
            form.addEventListener('submit', event => {
                if (!form.checkValidity()) {
                    event.preventDefault()
                    event.stopPropagation()
                }

                form.classList.add('was-validated')
            }, false)
        })
    })()
</script>
